[project]
name = "fastapi-todo-app"
version = "0.1.0"
description = "A modern TODO application built with FastAPI, SQLAlchemy, and UV"
readme = "README.md"
authors = [
    { name = "Aniket Jagani", email = "jaganianiket@gmail.com" }
]
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.5",
    "fastapi[standard]>=0.117.1",
    "pydantic-settings>=2.10.1",
    "python-multipart>=0.0.20",
    "sqlalchemy>=2.0.43",
    "uvicorn[standard]>=0.37.0",
]
keywords = ["fastapi", "todo", "api", "rest", "sqlalchemy", "python"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
]

[project.urls]
Homepage = "https://github.com/aniketjagani/FastAPI_TODO_App"
Repository = "https://github.com/aniketjagani/FastAPI_TODO_App"
Documentation = "https://github.com/aniketjagani/FastAPI_TODO_App#readme"
"Bug Tracker" = "https://github.com/aniketjagani/FastAPI_TODO_App/issues"

[project.scripts]
fastapi-todo-app = "fastapi_todo_app:main"

[build-system]
requires = ["uv_build>=0.8.22,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "black>=25.9.0",
    "flake8>=7.3.0",
    "httpx>=0.28.1",
    "isort>=6.0.1",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
]

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "alembic.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
